<?php

/**
 * @file
 * Create forms with ajax frameworks.
 */
 

/**
 * Implementation of hook_menu().
 */
function my_ajax_menu() {
  $items['fajax'] = array(  
    'title' => 'Ajax', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array('my_ajax_forms'),
    'access callback' => TRUE,
  ); 
  $items['proces_ajax'] = array(  
    'page callback' => 'my_ajax_ajax_callback',
    'delivery callback' => 'ajax_deliver',
    'theme callback' => 'ajax_base_page_theme',
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
  ); 
  $items['proces_ajax_del/%'] = array(  
    'page callback' => 'my_ajax_del_callback',
    'page arguments' => array(1),
    'delivery callback' => 'ajax_deliver',
    'theme callback' => 'ajax_base_page_theme',
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
  ); 
  return $items;
}

/**
 * Function create form.
 */
function my_ajax_forms($form, &$form_state) {
  $form = array();
  $form['fild'] = array(
    '#type'  => 'textfield',
    '#title' => 'Enter text.',
  );
  $form['submit'] = array(
    '#type'  => 'submit',
    '#value' => t('Add text'),
    '#ajax' => array(
      'path' => 'proces_ajax',
    ),
  );
  $form['replace'] = array(
    '#markup' => "<ul id='lif'></ul>",
  );
  return $form;
}

/**
 * Function add text with form via ajax framework.
 */
function my_ajax_ajax_callback() {
  ctools_include('ajax');

  list($form, $form_state) = ajax_get_form('my_ajax_forms');
  drupal_process_form($form['#form_id'], $form, $form_state);
  $s = $form_state['values']['fild'];

  $commands = array();
  if (!empty($s)) {
    $hid = mt_rand(0, 100);
    $link = l(t('delete'), "proces_ajax_del/$hid/nojs", array('attributes' => array('class' => 'use-ajax')));
    $commands[] = ajax_command_append('#lif', "<li id='$hid'>$s $link</li>");
    $commands[] = ctools_ajax_command_attr("input[name='fild']", 'value', '');
  }
  else {
    $alert = t('Enter text');
    $commands[] = ajax_command_alert("$alert");
  }
  return array('#type' => 'ajax', '#commands' => $commands);
  
}


/**
 * Function delete text with form via ajax framework.
 *
 *@param $id string.
 *   Which text id delete.
 *
 */
function my_ajax_del_callback($id, $ajax = 'ajax') {
  if ($ajax == 'ajax') {
    $commands = array();
    $commands[] = ajax_command_remove("#$id");
    return array('#type' => 'ajax', '#commands' => $commands);
  }

}


/**
 * Implementation of hook_permission().
 */
function my_ajax_permission() {
  return array(
    'administer my_ajax' => array(
      'title' => t('Administer my_ajax'),
      'description' => t('Access to view this content is denied.'),
    ),
  );
}
